// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  name     String
  username String @unique
  email    String @unique
  phone    String?
  website  String?
  
  // Address information (flattened from nested object)
  addressStreet  String?
  addressSuite   String?
  addressCity    String?
  addressZipcode String?
  addressLat     String?
  addressLng     String?
  
  // Company information (flattened from nested object)
  companyName        String?
  companyCatchPhrase String?
  companyBs          String?
  
  // App-specific fields
  password   String // For authentication
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  
  // Relations
  posts Post[]
  likes Like[]
  
  @@map("users")
}

model Post {
  id     Int    @id @default(autoincrement())
  title  String
  body   String
  userId Int
  
  // App-specific fields
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  user  User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  likes Like[]
  
  @@map("posts")
}

model Like {
  id     Int @id @default(autoincrement())
  userId Int
  postId Int
  
  createdAt DateTime @default(now())
  
  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
  
  // Ensure a user can only like a post once
  @@unique([userId, postId])
  @@map("likes")
}